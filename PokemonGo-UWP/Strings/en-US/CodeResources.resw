<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DateFormat" xml:space="preserve">
    <value>dd.MM.yyyy</value>
  </data>
  <data name="DateTimeFormat" xml:space="preserve">
    <value>dd.MM.yyyy hh:mm tt</value>
  </data>
  <data name="PokemonFledText" xml:space="preserve">
    <value>{0} fled</value>
  </data>
  <data name="GettingGpsSignalText" xml:space="preserve">
    <value>Getting GPS signal...</value>
  </data>
  <data name="GettingUserDataText" xml:space="preserve">
    <value>Getting user data...</value>
  </data>
  <data name="GoogleErrorText" xml:space="preserve">
    <value>Google returned error: </value>
  </data>
  <data name="GoogleNotRespondingText" xml:space="preserve">
    <value>Google is not responding, please try again later.</value>
  </data>
  <data name="LoginExpired" xml:space="preserve">
    <value>Previous login expired.</value>
  </data>
  <data name="LoadingEncounterText" xml:space="preserve">
    <value>Loading encounter with {0}</value>
  </data>
  <data name="LoggingInText" xml:space="preserve">
    <value>Logging in...</value>
  </data>
  <data name="LoginFailedText" xml:space="preserve">
    <value>Login failed, please try again.</value>
  </data>
  <data name="NoText" xml:space="preserve">
    <value>NO</value>
    <comment>Capslock</comment>
  </data>
  <data name="NoGpsPermissionsText" xml:space="preserve">
    <value>We need GPS permissions to run the game, please enable it and try again.</value>
  </data>
  <data name="PokemonRanAwayText" xml:space="preserve">
    <value>Pokémon ran away, sorry :(</value>
  </data>
  <data name="PtcDownText" xml:space="preserve">
    <value>PTC login is probably down, please retry later.</value>
  </data>
  <data name="SomethingWentWrongText" xml:space="preserve">
    <value>Something went wrong and app may be unstable now. Do you want to logout and try again?</value>
  </data>
  <data name="TimeFormat" xml:space="preserve">
    <value>hh:mm tt</value>
  </data>
  <data name="UpdateDownloadingText" xml:space="preserve">
    <value>Downloading update {0}</value>
  </data>
  <data name="UpdatedVersionText" xml:space="preserve">
    <value>An updated version {0} is available. Do you want to update?
{1}</value>
  </data>
  <data name="UpdateFailedText" xml:space="preserve">
    <value>Update failed: {0}
Open page with installation files for manual install?</value>
  </data>
  <data name="UpdateInstallingText" xml:space="preserve">
    <value>Installing update, app is restarting...</value>
  </data>
  <data name="WrongUsernameText" xml:space="preserve">
    <value>Wrong username/password or offline server, please try again.</value>
  </data>
  <data name="YesText" xml:space="preserve">
    <value>YES</value>
    <comment>Capslock</comment>
  </data>
  <data name="InstinctTeamText" xml:space="preserve">
    <value>Instinct</value>
  </data>
  <data name="NoTeamText" xml:space="preserve">
    <value>No Team</value>
  </data>
  <data name="ValorTeamText" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="MysticTeamText" xml:space="preserve">
    <value>Mystic</value>
  </data>
  <data name="TransferPokemonSuccessText" xml:space="preserve">
    <value>Transfer succeeded! Got a {0} Candy from the Professor.</value>
  </data>
  <data name="TransferPokemonWarningText" xml:space="preserve">
    <value>You can't take it back after it's transferred to the Professor.</value>
  </data>
  <data name="ActivityUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="ActivityCatchPokemon" xml:space="preserve">
    <value>Pokémon Caught</value>
  </data>
  <data name="ActivityCatchLegendPokemon" xml:space="preserve">
    <value>Catch Legendary Pokémon</value>
  </data>
  <data name="ActivityFleePokemon" xml:space="preserve">
    <value>Pokémon Fled</value>
  </data>
  <data name="ActivityDefeatFort" xml:space="preserve">
    <value>Defeat Fort</value>
  </data>
  <data name="ActivityEvolvePokemon" xml:space="preserve">
    <value>Evolve a Pokémon</value>
  </data>
  <data name="ActivityHatchEgg" xml:space="preserve">
    <value>Egg Hatched!</value>
  </data>
  <data name="ActivityWalkKm" xml:space="preserve">
    <value>Walk Km</value>
  </data>
  <data name="ActivityPokedexEntryNew" xml:space="preserve">
    <value>New Pokémon</value>
  </data>
  <data name="ActivityCatchFirstThrow" xml:space="preserve">
    <value>First Throw</value>
  </data>
  <data name="ActivityCatchNiceThrow" xml:space="preserve">
    <value>Nice Throw</value>
  </data>
  <data name="ActivityCatchGreatThrow" xml:space="preserve">
    <value>Great Throw</value>
  </data>
  <data name="ActivityCatchExcellentThrow" xml:space="preserve">
    <value>Excellent Throw</value>
  </data>
  <data name="ActivityCatchCurveball" xml:space="preserve">
    <value>Curveball</value>
  </data>
  <data name="ActivityCatchFirstCatchOfDay" xml:space="preserve">
    <value>First Catch of Day!</value>
  </data>
  <data name="ActivityCatchMilestone" xml:space="preserve">
    <value>Catch Milestone</value>
  </data>
  <data name="ActivityTrainPokemon" xml:space="preserve">
    <value>Train Pokémon</value>
  </data>
  <data name="ActivitySearchFort" xml:space="preserve">
    <value>Search Fort</value>
  </data>
  <data name="ActivityReleasePokemon" xml:space="preserve">
    <value>Release Pokémon</value>
  </data>
  <data name="ActivityHatchEggSmallBonus" xml:space="preserve">
    <value>Hatch Egg Small Bonus</value>
  </data>
  <data name="ActivityHatchEggMediumBonus" xml:space="preserve">
    <value>Hatch Egg Medium Bonus</value>
  </data>
  <data name="ActivityHatchEggLargeBonus" xml:space="preserve">
    <value>Hatch Egg Large Bonus</value>
  </data>
  <data name="ActivityDefeatGymDefender" xml:space="preserve">
    <value>Defeat Gym Defender</value>
  </data>
  <data name="ActivityDefeatGymLeader" xml:space="preserve">
    <value>Defeat Gym Leader</value>
  </data>
  <data name="Combat" xml:space="preserve">
    <value>Combat</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Fav" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="Health" xml:space="preserve">
    <value>Health</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="PokemonInventoryFullText" xml:space="preserve">
    <value>Your Pokémon inventory is full, transfer some Pokémon before trying to catch {0}.</value>
  </data>
  <data name="WaitingForNetworkText" xml:space="preserve">
    <value>Waiting for network to be back...</value>
  </data>
  <data name="EggHatchMessage" xml:space="preserve">
    <value>An Egg hatched into a {0}.
You also got {1} Stardust, {2} Candy and {3} XP.</value>
  </data>
  <data name="EvolvePokemonWarningText" xml:space="preserve">
    <value>Do you want to evolve {0}?</value>
  </data>
  <data name="PowerUpPokemonWarningText" xml:space="preserve">
    <value>Do you want to use a power up for {0}?</value>
  </data>
  <data name="TransferPokemonWarningTitle" xml:space="preserve">
    <value>Do you really want to transfer {0} to the Professor?</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>CANCEL</value>
    <comment>Capslock</comment>
  </data>
  <data name="ItemDiscardWarningText" xml:space="preserve">
    <value>Discard {0}?</value>
  </data>
  <data name="SetNickName" xml:space="preserve">
    <value>Set Nickname</value>
  </data>
  <data name="OkText" xml:space="preserve">
    <value>O. K.</value>
    <comment>Space between . and K</comment>
  </data>
  <data name="PokemonEncounterErrorText" xml:space="preserve">
    <value>There was an error loading the encounter with {0}, please try again later.</value>
  </data>
  <data name="PokemonEncounterNotInRangeText" xml:space="preserve">
    <value>{0} is not in catch range anymore.</value>
  </data>
  <data name="CannotTransferFavorite" xml:space="preserve">
    <value>Cannot transfer a favorite Pokémon!</value>
  </data>
  <data name="CantUseBerryText" xml:space="preserve">
    <value>You already used a Berry.</value>
  </data>
  <data name="LureDetailsTextEmpty" xml:space="preserve">
    <value>Can have a PokéStop Module installed</value>
  </data>
  <data name="LureTitleTextEmpty" xml:space="preserve">
    <value>Empty module slot</value>
  </data>
  <data name="IncubatorRemainingUsesText" xml:space="preserve">
    <value>{0} use(s) left</value>
    <comment>If your language uses multiply sign, use × (unicode char) and not x</comment>
  </data>
  <data name="ItemUseQuestionText" xml:space="preserve">
    <value>Use {0} ?</value>
  </data>
</root>